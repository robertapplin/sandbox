version: '3'

services:
  webserver:
    restart: unless-stopped
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
  web:
    build: ./my_site
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    environment:
      DB_HOST: db
      DB_NAME: mydb
      DB_USER: postgres
      DB_PASSWORD: mypassword
    depends_on:
      - worker
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_PASSWORD: mypassword
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
  worker:
    restart: unless-stopped
    build: ./my_site
    command: celery -A basic_app worker --loglevel=INFO --concurrency 1
    environment:
      DB_HOST: db
      DB_NAME: mydb
      DB_USER: postgres
      DB_PASSWORD: mypassword
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  redis:
    restart: unless-stopped
    image: redis
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 5

